{"version":3,"sources":["components/Search.jsx","components/Card.jsx","components/Display.jsx","App.js","reportWebVitals.js","index.js"],"names":["connect","state","refInput","cityInput","restaurants","refDisplay","props","zomatoRes","zomatoCity","cityRes","cityId","citySearch","refSearch","cityFetch","e","a","fetch","headers","zomatoAPI","json","location_suggestions","dispatch","type","id","console","log","resFetch","display","msg","error","div","initial","opacity","animate","transition","duration","className","aria-label","placeholder","aria-describedby","onChange","target","value","onClick","Card","src","resImg","alt","resName","resAddr","resCuis","resRating","city","ul","map","res","index","restaurant","featured_image","name","location","address","cuisines","user_rating","aggregate_rating","errorMsg","h1","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","ReduxApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QA0IeA,eAPS,SAACC,GAAD,MAAY,CAClCC,SAAUD,EAAMC,SAChBC,UAAWF,EAAME,UACjBC,YAAaH,EAAMG,YACnBC,WAAYJ,EAAMI,cAGLL,EAvIA,SAACM,GACd,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EANoB,SAoBTC,EApBS,8EAoBxB,WAAyBC,GAAzB,eAAAC,EAAA,+EAE4BC,MACtB,mDAAqDV,EAAMH,UAC3D,CAAEc,QAAS,CAAE,WAAY,sCAJ/B,cAEUC,EAFV,gBAMuBA,EAAUC,OANjC,QAMIX,EANJ,QAOmBY,uBAAyB,KACtCd,EAAMe,SAAS,CAAEC,KAAM,kBAAmBb,YAC1CC,EAASF,EAAWY,qBAAqB,GAAGG,GAC5CC,QAAQC,IAAIf,GACZgB,IACApB,EAAMe,SAAS,CAAEC,KAAM,gBAAiBK,QAAS,cAZvD,kDAeIH,QAAQC,IAAI,SACZnB,EAAMe,SAAS,CACbC,KAAM,eACNM,IAAK,kBACLC,MAAO,KAnBb,2DApBwB,+BA4CTH,IA5CS,2EA4CxB,4BAAAX,EAAA,+EAE4BC,MACtB,2DACEN,EACA,uBACAJ,EAAMJ,SACN,0BACF,CAAEe,QAAS,CAAE,WAAY,sCAR/B,cAEUC,EAFV,gBAUsBA,EAAUC,OAVhC,QAUIZ,EAVJ,QAWkBH,cAAgB,KAC5BK,EAAUF,EAAUH,YACpBE,EAAMe,SAAS,CAAEC,KAAM,qBAAsBb,aAbnD,kDAgBIe,QAAQC,IAAI,SAhBhB,2DA5CwB,sBAsExB,OACE,eAAC,IAAOK,IAAR,CACEC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,WAAY,CAAEC,SAAU,KACxBC,UAAU,iBAJZ,UAKE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,mBAAhB,oBAEF,uBACEC,aAAW,oBACXd,GAAG,YACHa,UAAU,eACVd,KAAK,OACLgB,YAAY,oBACZC,mBAAiB,gBACjBC,SA9EiB,SAAC1B,GACxBH,EAAaG,EAAE2B,OAAOC,MACtBpC,EAAMe,SAAS,CAAEC,KAAM,oBAAqBX,kBA8ExC,qBAAKyB,UAAU,qBAAf,SACE,wBACEC,aAAW,0CACXD,UAAU,gDACVO,QA9BS,WACjB9B,KA8BQS,KAAK,SACLC,GAAG,gBALL,yBAWJ,sBAAKa,UAAW,oBAAsB9B,EAAMD,WAA5C,UACE,qBAAK+B,UAAU,sBAAf,SACE,sBAAMA,UAAU,mBAAhB,sBAEF,uBACEC,aAAW,iCACXD,UAAU,eACVd,KAAK,OACLgB,YAAY,iCACZC,mBAAiB,gBACjBC,SAjGgB,SAAC1B,GACvBF,EAAYE,EAAE2B,OAAOC,MACrBpC,EAAMe,SAAS,CAAEC,KAAM,mBAAoBV,iBAiGvC,qBAAKwB,UAAU,qBAAf,SACE,wBACEC,aAAW,iDACXD,UAAU,gDACVO,QAnDW,WACnB9B,KAmDQS,KAAK,SACLC,GAAG,gBALL,+BCvFKqB,EA9BF,SAACtC,GACZ,OACE,qBAAI8B,UAAU,qDAAd,UACE,qBACEA,UAAU,qCACVS,IAAKvC,EAAMwC,OACXC,IAAKzC,EAAM0C,UAEb,uBAAMZ,UAAU,4BAAhB,UACE,qBAAKA,UAAU,uBAAf,0BACA,qBAAKA,UAAU,GAAf,SAAmB9B,EAAM0C,aAG3B,uBAAMZ,UAAU,4BAAhB,UACE,qBAAKA,UAAU,kBAAf,uBACA,qBAAKA,UAAU,GAAf,SAAmB9B,EAAM2C,aAG3B,uBAAMb,UAAU,iCAAhB,UACE,qBAAKA,UAAU,kBAAf,uBACA,qBAAKA,UAAU,GAAf,SAAmB9B,EAAM4C,aAE3B,uBAAMd,UAAU,mBAAhB,UACE,qBAAKA,UAAU,kBAAf,sBACA,sBAAKA,UAAU,GAAf,UAAmB9B,EAAM6C,UAAzB,mBCMOnD,eALS,SAACC,GAAD,MAAY,CAClCmD,KAAMnD,EAAMmD,KACZhD,YAAaH,EAAMG,eAGNJ,EA1BC,SAACM,GACf,OACE,cAAC,IAAO+C,GAAR,CACEtB,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,WAAY,CAAEC,SAAU,GACxBC,UAAU,oEAJZ,SAKG9B,EAAMF,YAAYkD,KAAI,SAACC,EAAKC,GAAN,OACrB,cAAC,EAAD,CACEV,OAAQS,EAAIE,WAAWC,eACvBV,QAASO,EAAIE,WAAWE,KACxBV,QAASM,EAAIE,WAAWG,SAASC,QACjCX,QAASK,EAAIE,WAAWK,SACxBX,UAAWI,EAAIE,WAAWM,YAAYC,kBACjCR,WCYAxD,G,MAAAA,aANS,SAACC,GAAD,MAAY,CAClCmD,KAAMnD,EAAMmD,KACZhD,YAAaH,EAAMG,YACnB6D,SAAUhE,EAAMgE,YAGHjE,EAxBH,SAACM,GACX,OACE,sBAAK8B,UAAU,wCAAf,UACE,cAAC,IAAO8B,GAAR,CACEnC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,WAAY,CAAEC,SAAU,KACxBC,UAAU,OACVb,GAAG,QALL,+BAQA,cAAC,EAAD,IACA,4BAAIjB,EAAM2D,WACV,cAAC,EAAD,WCPSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCCRQ,EAAe,CACnB1E,SAAU,GACVC,UAAW,GACXC,YAAa,GACbC,WAAY,SACZ4D,SAAU,GACVpC,MAAO,UA0CT,IAAMgD,EAAQC,aAvCd,WAAgD,IAA/B7E,EAA8B,uDAAtB2E,EAAcG,EAAQ,uCAC7C,OAAQA,EAAOzD,MACb,IAAK,oBACH,OAAO,2BACFrB,GADL,IAEEE,UAAW4E,EAAOpE,aAEtB,IAAK,qBACH,OAAO,2BACFV,GADL,IAEEG,YAAa2E,EAAOtE,UAExB,IAAK,mBACH,OAAO,2BACFR,GADL,IAEEC,SAAU6E,EAAOnE,YAErB,IAAK,gBACH,OAAO,2BACFX,GADL,IAEEI,WAAY0E,EAAOpD,UAEvB,IAAK,eACH,OAAO,2BACF1B,GADL,IAEE4B,MAAO,GACPoC,SAAUc,EAAOnD,MAErB,IAAK,kBACH,OAAO,2BACF3B,GADL,IAEE4B,MAAO,SACPoC,SAAU,KAGd,QACE,OAAOhE,MAKP+E,EAAW,kBACf,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,OAIJI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BlB,M","file":"static/js/main.a95f3ee5.chunk.js","sourcesContent":["import { connect } from \"react-redux\";\nimport { motion } from \"framer-motion\";\n\nconst Search = (props) => {\n  let zomatoRes;\n  let zomatoCity;\n  let cityRes;\n  let cityId;\n  let citySearch;\n  let refSearch;\n\n  // tracks city input to state\n  const handleCityChange = (e) => {\n    citySearch = e.target.value;\n    props.dispatch({ type: \"CHANGE_CITY_INPUT\", citySearch });\n  };\n  // tracks refine input to state\n  const handleRefChange = (e) => {\n    refSearch = e.target.value;\n    props.dispatch({ type: \"CHANGE_REF_INPUT\", refSearch });\n  };\n\n  // fetches restaurants within city, with refine inputs (nested), according to rating\n  async function cityFetch(e) {\n    try {\n      const zomatoAPI = await fetch(\n        \"https://developers.zomato.com/api/v2.1/cities?q=\" + props.cityInput,\n        { headers: { \"user-key\": \"4f42c5284bfce5f27f00f8bebf22082d\" } }\n      );\n      zomatoCity = await zomatoAPI.json();\n      if (zomatoCity.location_suggestions !== []) {\n        props.dispatch({ type: \"CHANGE_NO_ERROR\", cityRes });\n        cityId = zomatoCity.location_suggestions[0].id;\n        console.log(cityId);\n        resFetch();\n        props.dispatch({ type: \"CHANGE_HIDDEN\", display: \"visibile\" });\n      }\n    } catch {\n      console.log(\"error\");\n      props.dispatch({\n        type: \"CHANGE_ERROR\",\n        msg: \"No City Matches\",\n        error: \"\",\n      });\n    }\n  }\n  // fetching restaurants according to refine\n  async function resFetch() {\n    try {\n      const zomatoAPI = await fetch(\n        \"https://developers.zomato.com/api/v2.1/search?entity_id=\" +\n          cityId +\n          \"&entity_type=city&q=\" +\n          props.refInput +\n          \"&sort=rating&order=desc\",\n        { headers: { \"user-key\": \"4f42c5284bfce5f27f00f8bebf22082d\" } }\n      );\n      zomatoRes = await zomatoAPI.json();\n      if (zomatoRes.restaurants !== []) {\n        cityRes = zomatoRes.restaurants;\n        props.dispatch({ type: \"CHANGE_RESTAURANTS\", cityRes });\n      }\n    } catch {\n      console.log(\"error\");\n    }\n  }\n  const handleCity = () => {\n    cityFetch();\n  };\n  const handleRefine = () => {\n    cityFetch();\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 1.5 }}\n      className=\"searchBar px-1\">\n      <div className=\"input-group mb-3 \">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">City</span>\n        </div>\n        <input\n          aria-label=\"Enter a City Name\"\n          id=\"cityInput\"\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"Enter a City Name\"\n          aria-describedby=\"button-addon1\"\n          onChange={handleCityChange}></input>\n\n        <div className=\"input-group-append\">\n          <button\n            aria-label=\"Click to search for restaurants in city\"\n            className=\"btn btn-light text-dark btn-outline-secondary\"\n            onClick={handleCity}\n            type=\"button\"\n            id=\"button-addon1\">\n            Search\n          </button>\n        </div>\n      </div>\n\n      <div className={\"input-group mb-3 \" + props.refDisplay}>\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">Refine</span>\n        </div>\n        <input\n          aria-label=\"Enter Keyword to Refine Search\"\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"Enter Keyword to Refine Search\"\n          aria-describedby=\"button-addon2\"\n          onChange={handleRefChange}></input>\n\n        <div className=\"input-group-append\">\n          <button\n            aria-label=\"Click to refine restaurant search with keyword\"\n            className=\"btn btn-light text-dark btn-outline-secondary\"\n            onClick={handleRefine}\n            type=\"button\"\n            id=\"button-addon2\">\n            Refine\n          </button>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  refInput: state.refInput,\n  cityInput: state.cityInput,\n  restaurants: state.restaurants,\n  refDisplay: state.refDisplay,\n});\n\nexport default connect(mapStateToProps)(Search);\n","const Card = (props) => {\n  return (\n    <li className=\"border rounded resCard m-2 p-2 d-flex flex-column \">\n      <img\n        className=\"cardImg border rounded w-100  mt-1\"\n        src={props.resImg}\n        alt={props.resName}\n      />\n      <span className=\"d-flex py-2 border-bottom\">\n        <div className=\"subhead name fw-bold\">Restaurant: </div>\n        <div className=\"\">{props.resName}</div>\n      </span>\n\n      <span className=\"d-flex py-2 border-bottom\">\n        <div className=\"subhead fw-bold\">Address: </div>\n        <div className=\"\">{props.resAddr}</div>\n      </span>\n\n      <span className=\"d-flex py-2 mb-2 border-bottom\">\n        <div className=\"subhead fw-bold\">Cuisine: </div>\n        <div className=\"\">{props.resCuis}</div>\n      </span>\n      <span className=\"d-flex py-2 mb-2\">\n        <div className=\"subhead fw-bold\">Rating: </div>\n        <div className=\"\">{props.resRating}&#9733;</div>\n      </span>\n    </li>\n  );\n};\n\nexport default Card;\n","import { connect } from \"react-redux\";\nimport Card from \"./Card\";\nimport { motion } from \"framer-motion\";\n\nconst Display = (props) => {\n  return (\n    <motion.ul\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 3 }}\n      className=\"list-unstyled d-flex p-0 flex-wrap justify-content-center display\">\n      {props.restaurants.map((res, index) => (\n        <Card\n          resImg={res.restaurant.featured_image}\n          resName={res.restaurant.name}\n          resAddr={res.restaurant.location.address}\n          resCuis={res.restaurant.cuisines}\n          resRating={res.restaurant.user_rating.aggregate_rating}\n          key={index}\n        />\n      ))}\n    </motion.ul>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  city: state.city,\n  restaurants: state.restaurants,\n});\n\nexport default connect(mapStateToProps)(Display);\n","import { connect } from \"react-redux\";\nimport Search from \"./components/Search\";\nimport Display from \"./components/Display\";\nimport { motion } from \"framer-motion\";\nimport \"./App.css\";\n\nconst App = (props) => {\n  return (\n    <div className=\"d-flex flex-column align-items-center\">\n      <motion.h1\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 1.5 }}\n        className=\"my-2\"\n        id=\"title\">\n        Restaurant Search\n      </motion.h1>\n      <Search />\n      <p>{props.errorMsg}</p>\n      <Display />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  city: state.city,\n  restaurants: state.restaurants,\n  errorMsg: state.errorMsg,\n});\n\nexport default connect(mapStateToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nconst initialState = {\n  refInput: \"\",\n  cityInput: \"\",\n  restaurants: [],\n  refDisplay: \"hidden\",\n  errorMsg: \"\",\n  error: \"hidden\",\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"CHANGE_CITY_INPUT\":\n      return {\n        ...state,\n        cityInput: action.citySearch,\n      };\n    case \"CHANGE_RESTAURANTS\":\n      return {\n        ...state,\n        restaurants: action.cityRes,\n      };\n    case \"CHANGE_REF_INPUT\":\n      return {\n        ...state,\n        refInput: action.refSearch,\n      };\n    case \"CHANGE_HIDDEN\":\n      return {\n        ...state,\n        refDisplay: action.display,\n      };\n    case \"CHANGE_ERROR\":\n      return {\n        ...state,\n        error: \"\",\n        errorMsg: action.msg,\n      };\n    case \"CHANGE_NO_ERROR\":\n      return {\n        ...state,\n        error: \"hidden\",\n        errorMsg: \"\",\n      };\n\n    default:\n      return state;\n  }\n}\nconst store = createStore(reducer);\n\nconst ReduxApp = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxApp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}